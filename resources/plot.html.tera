<!DOCTYPE html>
<html>
<head>
    <script>{{ vega | safe }}</script>
    <script>{{ vegalite | safe }}</script>
    <script>{{ vegaembed | safe }}</script>
    <style>
        #controls {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin: 1rem auto;
            max-width: 1000px;
            padding: 0 1rem;
            flex-wrap: nowrap;
        }

        #read-info {
            margin: 1rem auto;
            border-collapse: collapse;
            font-family: system-ui, sans-serif;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            min-width: 400px;
            border-radius: 8px;
            overflow: hidden;
        }

        #read-info th,
        #read-info td {
            padding: 0.75rem 1rem;
            text-align: left;
        }

        #read-info thead {
            background-color: #f5f7fa;
            font-weight: 600;
            color: #333;
        }

        #read-info tbody tr:nth-child(even) {
            background-color: #f9fafb;
        }

        #read-info tbody tr:hover {
            background-color: #eef2f7;
        }

        #read-info td {
            color: #444;
        }

        #read-info caption {
            caption-side: bottom;
            padding-top: 0.5rem;
            font-size: 0.9rem;
            color: #888;
        }

        #manual {
            font-family: system-ui, sans-serif;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            padding: 0.75rem 1rem;
            color: #333;
            flex: 0 0 45%;
        }

        #manual:hover {
            background-color: #eef2f7;
        }

        #manual summary {
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            outline: none;
            padding: 0.25rem 0;
        }

        #manual summary::-webkit-details-marker {
            display: none; /* Optional: remove the default marker */
        }

        #manual ul {
            margin-top: 0.75rem;
            padding-left: 1.25rem;
        }

        #manual li {
            margin-bottom: 0.5rem;
            line-height: 1.5;
        }

        #filter-container {
            flex: 0 0 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            #read-filter {
            padding: 0.5rem;
            font-size: 1rem;
            width: 300px;
            border-radius: 6px;
            border: 1px solid #ccc;
        }
    </style>
</head>
<body>
<div id="controls">
  <details id="manual">
    <summary>Plot manual</summary>
    <ul>
      <li><strong>Zoom:</strong> Use the mouse wheel to zoom in and out of the plot.</li>
      <li><strong>Pan:</strong> Click and drag to pan through the reads horizontally.</li>
      <li><strong>Highlight Reads:</strong> Click on a read to highlight it. This will lower the opacity of all other reads, allowing better visibility of the selected read, especially when read mates overlap.</li>
    </ul>
  </details>

  <div id="filter-container">
    <input type="text" id="read-filter" placeholder="Filter by read name...">
  </div>
</div>
<table id="read-info" border="1">
  <thead>
    <tr><th>Name</th><th>Position</th><th>Flags</th></tr>
  </thead>
  <tbody>
    <tr><td colspan="3">Click a read</td></tr>
  </tbody>
</table>
<div id="vis" style="display: flex; justify-content: center;"></div>
<script>
    const spec = {{ spec | safe }};
    let fullData = [];
    vegaEmbed("#vis", spec, {mode: "vega-lite"}).then(({ view }) => {
        fullReads = view.data('reads');
        const el = document.getElementById("vis");

        const used_libs = document.createElement('a');
        used_libs.textContent = "Used libraries:";
        used_libs.setAttribute("style","font-size: 18px; border-top: 2px solid #000;");
        el.querySelector('.vega-actions').appendChild(used_libs);

        const vega_lite_link = document.createElement('a');
        vega_lite_link.setAttribute("href","https://github.com/vega/vega-lite");
        vega_lite_link.textContent = "vega-lite";
        el.querySelector('.vega-actions').appendChild(vega_lite_link);

        const vega_link = document.createElement('a');
        vega_link.setAttribute("href","https://github.com/vega/vega");
        vega_link.textContent = "vega";
        el.querySelector('.vega-actions').appendChild(vega_link);

        const vega_embed_link = document.createElement('a');
        vega_embed_link.setAttribute("href","https://github.com/vega/vega-embed");
        vega_embed_link.textContent = "vega-embed";
        el.querySelector('.vega-actions').appendChild(vega_embed_link);

        view.addEventListener('click', function(event, item) {
            const tableBody = document.querySelector("#read-info tbody");

            if (item && item.datum) {
            const datum = item.datum;
            tableBody.innerHTML = `
                <tr>
                <td>${datum.name}</td>
                <td>${datum.position}</td>
                <td>${datum.flags}</td>
                </tr>
            `;
            } else {
            tableBody.innerHTML = `<tr><td colspan="3">Click a read</td></tr>`;
            }
        });

        const input = document.getElementById("read-filter");
        input.addEventListener("input", () => {
            const query = input.value.toLowerCase();

            const filtered = fullReads.filter(d => d.name.toLowerCase().includes(query));

            view.change(
                'reads',
                vega
                    .changeset()
                    .remove(() => true)    // Remove all current reads
                    .insert(filtered)      // Insert only filtered reads
            ).run();
        });
    }).catch(console.warn);
</script>
</body>
</html>
